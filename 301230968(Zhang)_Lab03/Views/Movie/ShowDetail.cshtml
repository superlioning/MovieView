@model Movie
@{
    ViewBag.Title = "Show Movie Detail";
    var currentUsername = Context.Session.GetString("Username");
    var currentUserId = Context.Session.GetString("UserId");
}
@if (currentUserId != null && currentUsername != null)
{
    <div class="user-info-banner bg-light">
        <span class="username">Hello, @currentUsername</span>
        <span class="user-id">(@currentUserId)</span>
    </div>

    <div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card movie-details-card">
                <div class="row g-0">
                    <!-- Movie Poster -->
                    <div class="col-md-4">
                        <div class="poster-container">
                            <img src="@Model.ImageUrl" class="movie-poster" alt="@Model.Title poster">
                        </div>
                    </div>

                    <!-- Movie Details -->
                    <div class="col-md-8">
                        <div class="card-body p-4">
                            <h1 class="movie-title mb-3">@Model.Title</h1>
                            
                            <!-- Rating Section -->
                            <div class="rating-section mb-4">
                                <div class="d-flex align-items-center gap-3">
                                    <button type="button" class="btn btn-primary me-2" id="openModalBtn">
                                        <i class="fas fa-star me-2"></i>Rate Movie
                                    </button>
                                    <div class="average-rating me-2">
                                        <i class="fas fa-star text-warning"></i>
                                        <span class="ms-1">@((Model.AverageRating ?? 0).ToString())/10</span>
                                    </div>
                                    @{
                                        var specificUserID = currentUserId;
                                        var userRating = 0;
                                        if (Model.Ratings != null)
                                        {
                                            userRating = Model.Ratings.FirstOrDefault(r => r.UserID == specificUserID)?.RateValue ?? 0;
                                        }
                                    }
                                    <div class="user-rating">
                                        <i class="fas fa-user me-1"></i>
                                        <span>Your Rating: @userRating/10</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Movie Info Grid -->
                            <div class="movie-info-grid">
                                <div class="info-item">
                                    <span class="info-label"><i class="fas fa-film me-2"></i>Genre</span>
                                    <span class="info-value">@(string.IsNullOrEmpty(Model.Genre) ? "Genre not specified" : Model.Genre)</span>
                                </div>
                                
                                <div class="info-item">
                                    <span class="info-label"><i class="fas fa-video me-2"></i>Directors</span>
                                    <span class="info-value">
                                        @if (Model.Directors != null && Model.Directors.Any())
                                        {
                                            @string.Join(", ", Model.Directors)
                                        }
                                        else
                                        {
                                            @:Director information not available
                                        }
                                    </span>
                                </div>
                                
                                <div class="info-item">
                                    <span class="info-label"><i class="fas fa-users me-2"></i>Cast</span>
                                    <span class="info-value">
                                        @if (Model.Actors != null && Model.Actors.Any())
                                        {
                                            @string.Join(", ", Model.Actors)
                                        }
                                        else
                                        {
                                            @:Cast information not available
                                        }
                                    </span>
                                </div>
                                
                                <div class="info-item">
                                    <span class="info-label"><i class="fas fa-calendar-alt me-2"></i>Release Date</span>
                                    <span class="info-value">
                                        @{
                                            if (!string.IsNullOrEmpty(Model.ReleaseDate))
                                            {
                                                if (DateTime.TryParse(Model.ReleaseDate, out DateTime releaseDate))
                                                {
                                                    @releaseDate.ToString("MMMM d, yyyy")
                                                }
                                                else
                                                {
                                                    @Model.ReleaseDate
                                                }
                                            }
                                            else
                                            {
                                                @:Not available
                                            }
                                        }
                                    </span>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="action-buttons mt-4">
                                <a href="@Url.Action("DownloadMovie", "Movie", new { movieId = Model.MovieID })" class="btn btn-primary">
                                    <i class="fas fa-download me-2"></i>Download
                                </a>
                                <button id="createCommentModal" class="btn btn-secondary ms-2">
                                    <i class="fas fa-comment me-2"></i>Add Comment
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Comments Section -->
            <div class="comments-section mt-4">
                <h3 class="comments-title mb-3">
                    <i class="fas fa-comments me-2"></i>Comments
                </h3>
                
                @if (Model.Comments != null && Model.Comments.Any())
                {
                    foreach (var comment in Model.Comments)
                    {
                        <div class="comment-card mb-3">
                            <div class="comment-header">
                                @{
                                    var visiblePart = comment.UserID.Substring(4);
                                    var maskedUserID = new string('*', 4) + visiblePart;
                                }
                                <span class="user-id">@maskedUserID</span>
                                <span class="comment-date">@comment.CommentDateTime.ToString("MMM dd, yyyy HH:mm")</span>
                            </div>
                            <div class="comment-body">
                                <p>@comment.Message</p>
                            </div>
                            @if ((DateTime.Now - comment.CommentDateTime).TotalHours < 24 && comment.UserID == currentUserId)
                            {
                                <div class="comment-actions">
                                    <button class="btn btn-sm btn-outline-primary edit-comment me-2"
                                            data-message="@comment.Message"
                                            data-userid="@comment.UserID"
                                            data-commentdatetime="@comment.CommentDateTime.ToString("o")">
                                        <i class="fas fa-edit"></i> Edit
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger delete-comment"
                                            data-message="@comment.Message"
                                            data-userid="@comment.UserID"
                                            data-commentdatetime="@comment.CommentDateTime.ToString("o")">
                                        <i class="fas fa-trash-alt"></i> Delete
                                    </button>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="no-comments">
                        <i class="fas fa-comment-slash me-2"></i>
                        <span>No comments available for this movie.</span>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

    // add comment modal
    <div class="modal fade" id="commentModal" tabindex="-1" role="dialog" aria-labelledby="commentModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="commentModalLabel">Create Comment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <textarea id="commentText" class="form-control" placeholder="Write your comment..."></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" id="submitComment" class="btn btn-primary">Submit Comment</button>
                </div>
            </div>
        </div>
    </div>

    //edit comment modal
    <div class="modal fade" id="editCommentModal" tabindex="-1" role="dialog" aria-labelledby="editCommentModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editCommentModalLabel">Edit Comment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <textarea id="editCommentText" class="form-control" placeholder="Edit your comment..."></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" id="saveEditedComment" class="btn btn-primary">Save Comment</button>
                </div>
            </div>
        </div>
    </div>


    //Rating Modal
    <div class="modal fade" id="ratingModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Rate This Movie</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                
                <div class="modal-body text-center">
                    <p id="selectedStarText"></p>
                    <div class="stars">
                        <span class="star" data-value="1">★</span>
                        <span class="star" data-value="2">★</span>
                        <span class="star" data-value="3">★</span>
                        <span class="star" data-value="4">★</span>
                        <span class="star" data-value="5">★</span>
                        <span class="star" data-value="6">★</span>
                        <span class="star" data-value="7">★</span>
                        <span class="star" data-value="8">★</span>
                        <span class="star" data-value="9">★</span>
                        <span class="star" data-value="10">★</span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" id="submitRating" class="btn btn-primary">Confirm Score</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Show comment modal when "Create Comment" button is clicked
            $("#createCommentModal").click(function () {
                $("#commentModal").modal("show");
            });

            $("#submitComment").click(function () {
                var movieId = "@Model.MovieID"; 
                var message = $("#commentText").val();

                if (message.trim() === "") {
                    alert("Comment cannot be empty!");
                    return;
                }

                $.ajax({
                    url: '/Movie/AddComment', 
                    method: 'POST',
                    data: {
                        movieId: movieId,
                        message: message
                    },
                    success: function () {
                        // Close the modal and reload the page to see the new comment
                        $("#commentModal").modal("hide");
                        location.reload();
                    },
                    error: function () {
                        alert("Failed to add the comment. Please try again.");
                    }
                });
            });


            // Edit Comment
            $(".edit-comment").click(function () {
                var message = $(this).data("message");
                var userId = $(this).data("userid");
                var commentDateTime = $(this).data("commentdatetime");

                $("#editCommentText").val(message);

                // Store the comment details
                $("#editCommentModal").data("message", message);
                $("#editCommentModal").data("userid", userId);
                $("#editCommentModal").data("commentdatetime", commentDateTime);

                $("#editCommentModal").modal("show");
            });

            $("#saveEditedComment").click(function () {
                var editedMessage = $("#editCommentText").val();
                var originalMessage = $("#editCommentModal").data("message");
                var userId = $("#editCommentModal").data("userid");
                var commentDateTime = $("#editCommentModal").data("commentdatetime");
                var movieId = "@Model.MovieID";

                $.ajax({
                    url: '/Movie/EditComment',
                    method: 'POST',
                    data: {
                        movieId: movieId,
                        userId: userId,
                        originalMessage: originalMessage,
                        commentDateTime: commentDateTime,
                        editedMessage: editedMessage
                    },
                    success: function () {
                        $("#editCommentModal").modal("hide");
                        location.reload();
                    },
                    error: function (xhr) {
                        alert("Failed to edit the comment: " + xhr.responseText);
                    }
                });
            });

            // Delete Comment
            $(".delete-comment").click(function () {
                var message = $(this).data("message");
                var userId = $(this).data("userid");
                var commentDateTime = $(this).data("commentdatetime");
                var movieId = "@Model.MovieID";

                if (!confirm("Are you sure you want to delete this comment?")) {
                    return;
                }

                $.ajax({
                    url: "/Movie/DeleteComment",
                    method: "POST",
                    data: {
                        movieId: movieId,
                        userId: userId,
                        message: message,
                        commentDateTime: commentDateTime
                    },
                    success: function () {
                        location.reload();
                    },
                    error: function (xhr) {
                        alert("Failed to delete the comment: " + xhr.responseText);
                    },
                });
            });

            //Rating Script
             $("#openModalBtn").click(function() {
                var canRate = true;

        @if (Model.Ratings != null)
        {
            foreach (var rating in Model.Ratings)
            {
                
                if ((DateTime.Now - rating.RatingDateTime).TotalHours > 24 && rating.UserID == currentUserId)
                {
                    // User has rated within the last 24 hours
                    @:canRate = false;
                    break;
                }
            }
        }

                if (!canRate) {
                    alert("You have already rated within the last 24 hours!");
                } else {
                    // When the user can rate, show the rating modal
                    $("#ratingModal").modal('show');
                }
    });

            const stars = document.querySelectorAll('.star');
            let selectedStar = 0;

            stars.forEach((star, index) => {
                star.addEventListener('click', function () {
                    // Remove any existing 'active' or 'selected' classes from all stars
                    stars.forEach(s => s.classList.remove('active', 'selected'));

                    // Add 'selected' class to all stars up to and including the clicked one
                    for (let i = 0; i <= index; i++) {
                        stars[i].classList.add('selected');
                    }

                    // Add 'active' class to the clicked star
                    this.classList.add('active');

                    // Store the clicked star's value
                    selectedStar = this.getAttribute('data-value');

                    // Update the new paragraph element with the selected star value
                    document.getElementById('selectedStarText').innerText = `You are rating for ${selectedStar} star(s)`;
                });
            });


            $("#submitRating").click(function () {
                var movieId = "@Model.MovieID"; // Assuming your Movie model has a MovieID property
                var userId = "@currentUserId";

                if (selectedStar === 0) {
                    alert("Please select a rating before submitting.");
                    return;
                }

                $.ajax({
                    url: '/Movie/UpdateAverageRating', 
                    method: 'POST',
                    data: {
                        movieId: movieId,
                        userId: userId,
                        userRating: selectedStar
                    },
                    success: function () {
                        $("#ratingModal").modal("hide");
                        location.reload();
                    },
                    error: function () {
                        alert("Failed to update the rating. Please try again.");
                    }
                });
            });
     }); 
            
        // Close the modal when the Cancel button is clicked
        $('#commentModal .btn-secondary, #commentModal .close').on('click', function () {
            $('#commentModal').modal('hide');
        });

        $('#editCommentModal .btn-secondary, #editCommentModal .close').on('click', function () {
            $('#editCommentModal').modal('hide');
        });

        $('#ratingModal .btn-secondary, #ratingModal .close').on('click', function () {
            $('#ratingModal').modal('hide');
        });

    </script>
}